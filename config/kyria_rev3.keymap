/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    // chain-length = <6>;

    chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

/ {
    chosen { zmk,underglow = &led_strip; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R     &kp T                                                  &kp Y  &kp U  &kp I      &kp O    &kp P     &kp LBKT
&kp ESC    &kp A  &kp S  &kp D      &kp F     &kp G                                                  &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V     &kp B     &none      &kp LC(LG(X))  &mo 3    &kp CAPS  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LCTRL  &kp LALT  &kp LGUI  &kp SPACE  &mo 2          &kp RET  &none     &mo 1  &none  &kp BSPC
            >;
        };

        number_layer {
            bindings = <
&none      &kp N0   &kp N9    &kp N8     &kp N7     &kp N6                                    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &kp BSPC
&kp GRAVE  &kp N1   &kp N2    &kp N3     &kp N4     &kp N5                                    &kp PRCNT  &kp DLLR   &kp HASH  &kp AT    &kp EXCL  &kp TILDE
&trans     &kp SQT  &kp RBKT  &kp MINUS  &kp EQUAL  &kp BSLH  &none   &none   &none   &none   &kp PIPE   &kp UNDER  &kp PLUS  &kp RBRC  &kp DQT   &trans
                              &trans     &trans     &trans    &trans  &trans  &trans  &trans  &trans     &trans     &trans
            >;
        };

        navigation_layer {
            bindings = <
&kp INS  &none         &none      &kp PG_UP  &none        &none                                      &none         &none          &kp UP         &none         &none  &kp DEL
&none    &none         &kp HOME   &kp PG_DN  &kp END      &none                                      &none         &kp LEFT       &kp DOWN       &kp RIGHT     &none  &none
&trans   &kp LG(FSLH)  &kp LG(B)  &kp LG(I)  &kp LG(DOT)  &kp LG(T)  &none   &none   &none   &none   &kp LG(PIPE)  &kp LG(UNDER)  &kp LG(LS(A))  &kp LG(PLUS)  &none  &trans
                                  &trans     &trans       &trans     &trans  &trans  &trans  &trans  &trans        &trans         &trans
            >;
        };

        function_layer {
            bindings = <
&none            &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &none  &none  &bt BT_CLR_ALL                                                  &kp C_VOL_UP  &none       &trans  &trans  &trans  &rgb_ug RGB_TOG
&rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &none  &none  &none                                                           &kp C_VOL_DN  &none       &trans  &trans  &trans  &rgb_ug RGB_EFF
&rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &none  &none  &bt BT_CLR      &none         &bt BT_SEL 1  &trans  &none       &kp C_MUTE    &none       &trans  &trans  &trans  &rgb_ug RGB_EFR
                                                   &none  &none  &none           &bt BT_SEL 3  &bt BT_SEL 2  &none   &kp C_PREV  &kp C_PP      &kp C_NEXT  &none
            >;
        };
    };
};

